5+6
# Updating the file
data = c(9, 6, 17, 31, 11)
x = mean(data)
summary(data)
z = x/2
students_height = c(50, 55, 64, 71, 45.25)
mean(students_height)
install.packages("psych")
install.packages("psych")
install.packages("psych")
install.packages("package_name")
library(psych)
install.packages("psych")
setwd("D:/R/Codes/R-for-Data-Science-and-Machine-Learning-with-NBICT-LAB-Batch-8/RDSML-Day-14 ðŸ‘‰ Histogram in R (Part-2)")
# Importing the dataset
dataset = read.csv("data.csv")
# Importing the dataset
dataset = read.csv("data.csv")
# Importing the library
library(ggplot2)
# Creating the basic histogram
ggplot(dataset, aes(x = weight)) +
geom_histogram(color = "white")
# Changing histogram plot line colors by groups
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = .5, position = "identity")
# We can change the position adjustment
# to use for overlapping points on the layer.
# Possible values for the argument position are
# "identity", "stack", "dodge". Default value is "stack".
# Interleaved histograms
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = .5, position = "dodge") +
theme(legend.position = "top")
# The plyr package is used to calculate
# the mean weight of each group.
# install.packages("plyr")
library(plyr)
# install.packages("plyr")
library(plyr)
# install.packages("plyr")
library(plyr)
install.packages("plyr")
# Importing the dataset
dataset = read.csv("data.csv")
# Importing the library
library(ggplot2)
# Creating the basic histogram
ggplot(dataset, aes(x = weight)) +
geom_histogram(color = "white")
# Changing histogram plot line colors by groups
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = .5, position = "identity")
# We can change the position adjustment
# to use for overlapping points on the layer.
# Possible values for the argument position are
# "identity", "stack", "dodge". Default value is "stack".
# Interleaved histograms
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = .5, position = "dodge") +
theme(legend.position = "top")
# The plyr package is used to calculate
# the mean weight of each group.
# install.packages("plyr")
library(plyr)
group_means = ddply(dataset, "sex", summarise, grp.mean = mean(weight))
group_means
# Adding mean lines
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 1, position = "dodge") +
geom_vline(data = group_means, aes(xintercept = grp.mean, color = sex),
linetype = "dashed") +
theme(legend.position = "top")
myPlot
# Using custom color palettes
myPlot + scale_color_manual(values = c("#999999", "#E69F00")) +
scale_fill_manual(values = c("#999999", "#E69F00"))
# Using color brewer color palettes
myPlot + scale_color_brewer(palette = "Dark2") +
scale_fill_brewer(palette = "Dark2")
# Using a grey scale
myplot+ scale_color_grey() +  scale_fill_grey()
# Using a grey scale
myplot + scale_color_grey() +  scale_fill_grey()
# Using a grey scale
myplot + scale_color_grey() +  scale_fill_grey()+
theme_classic()
# Adding mean lines
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 1, position = "dodge") +
geom_vline(data = group_means, aes(xintercept = grp.mean, color = sex),
linetype = "dashed") +
theme(legend.position = "top")
myPlot
myplot + scale_color_grey() +  scale_fill_grey()+
theme_classic()
myPlot + scale_color_manual(values = c("#999999", "#E69F00")) +
scale_fill_manual(values = c("#999999", "#E69F00"))
myPlot + scale_color_brewer(palette = "Dark2") +
scale_fill_brewer(palette = "Dark2")
myplot + scale_color_grey() +  scale_fill_grey()+
theme_classic()
myPlot + scale_color_grey() +  scale_fill_grey()+
theme_classic()
